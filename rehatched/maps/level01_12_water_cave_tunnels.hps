/////////////////////
//START CLOSE LEVEL//
void EnterCloseLevel(string asParent, string asChild)
{
	CreateTimer("closelevel1", 0.5f, "CloseLevel01",false);
	
	FadeInSoundEntity("rumble1", 2);
	
	StartScreenShake(0.04f, 0.7f,1.3f,1);
	
	PlayGuiSound("horror_deep_thump", 0.7f);
	
	SetGameEntityActive("closelevel",false);
}

void CloseLevel01(string asTimer)
{
	PlaySoundEntity("bigboom2",false);
	
	CreateParticleSystem("explolock", "particle_expl_tnt", "craschdust3",1,1,1);
	
	for(int i=1;i<=3;i++)
		SetGameEntityActive("closerock"+i,true);
	for(int i=1;i<=3;i++)	
		SetBodyProperty("closerock"+i, "Mass", 0);
	
	FadeOutSoundEntity("rumble1", 0.5f);
	
	CreateTimer("closelevel2", 2.4f, "CloseLevel02",false);
	
	DestroyTimer("closelevel1");
}
void CloseLevel02(string asTimer)
{
	AddSubTitleTrans("01_12_water_cave_tunnels", "EventCloseLevel", 4.8f);

	DestroyTimer("closelevel2");
}
//STOP CLOSE LEVEL//
////////////////////

/////////////////////
//START SPIDER EGGS//
/*First encounter
 */
void P01Egg01(string asEntity)
{
	SetGameEntityActive("p1spider1",true);
	
	CreateTimer("delaysee1", 0.05f, "DelaySee01",false);
}
void DelaySee01(string asTimer)
{
	ShowEnemyPlayer("p1spider1");
	
	DestroyTimer("delaysee1");
}
void P01Egg02(string asEntity)
{
	SetGameEntityActive("p1spider2",true);
	
	CreateTimer("delaysee2", 0.9f, "DelaySee02",false);
}
void DelaySee02(string asTimer)
{
	ShowEnemyPlayer("p1spider2");
	
	DestroyTimer("delaysee2");
}
void P01Egg03(string asEntity)
{
	SetGameEntityActive("p1spider3",true);
	
	CreateTimer("delaysee3", 0.7f, "DelaySee03",false);
}
void DelaySee03(string asTimer)
{
	ShowEnemyPlayer("p1spider3");
	
	DestroyTimer("delaysee3");
}
void P01Egg04(string asEntity)
{
	SetGameEntityActive("p1spider4",true);
	
	CreateTimer("delaysee4", 0.6f, "DelaySee04",false);
}
void DelaySee04(string asTimer)
{
	ShowEnemyPlayer("p1spider4");
	
	DestroyTimer("delaysee4");
}
/*Enter spider area*/
void EnterSpiderArea01(string asParent, string asChild)
{
	SetGameEntityActive("spiders1",false);
	
	PlaySoundEntity("openegg1",false);
	
	CreateTimer("spiderdelay1single", 9.4f, "SpiderDelay01single",false);
	CreateTimer("encounter01mess", 4, "Encounter01Message",false);
	CreateTimer("encounter01sound", 4.5f, "Encounter01Sound",false);
}
void Encounter01Message(string asTimer)
{
	AddSubTitleTrans("01_12_water_cave_tunnels", "EventFirstHatch",4);	
}
void Encounter01Sound(string asTimer)
{
	PlaySoundEntity("openegg1",false);
}
/*Pop the eggs!*/
/*Pops one egg, then pops the rest as player kills the spider.
 */
void SpiderDelay01single(string asTimer)
{
	SetEntityHealth("p1egg1", 0);
	
	SetEnemyDeathCallback("p1spider1","ActivateSpiders01");
}
void ActivateSpiders01(string asEntity)
{
	PlaySoundEntity("openegg1",false);
	
	CreateTimer("spiderdelay1", 3.4f, "SpiderDelay01",false);
}
void SpiderDelay01(string asTimer)
{
	if (GetLocalVar("spider") <= 3)
	{
		SetEntityHealth("p1egg"+GetLocalVar("spider"), 0);
	
		AddLocalVar("spider", 1);
	
		DestroyTimer("spiderdelay1");
	
		CreateTimer("spiderdelay1", 0.1f+(GetLocalVar("spider")*0.05), "SpiderDelay01",false);
	}
	else if (GetLocalVar("spider") == 4)
	{
		SetEntityHealth("p1egg"+GetLocalVar("spider"), 0);
		
		SetLocalVar("spider", 1);
		
		DestroyTimer("spiderdelay1");
	}
}

/*Second encounter
 */
void P02Egg01(string asEntity)
{
	SetGameEntityActive("p2spider1",true);
	
	CreateTimer("delaysee1", 0.5f, "Delay2See01",false);
}
void Delay2See01(string asTimer)
{
	ShowEnemyPlayer("p2spider1");
	
	DestroyTimer("delaysee1");
}
void P02Egg02(string asEntity)
{
	SetGameEntityActive("p2spider2",true);
	
	CreateTimer("delaysee2", 0.4f, "Delay2See02",false);
}
void Delay2See02(string asTimer)
{
	ShowEnemyPlayer("p2spider2");
	
	DestroyTimer("delaysee2");
}
void P02Egg03(string asEntity)
{
	SetGameEntityActive("p2spider3",true);
	
	CreateTimer("delaysee3", 0.3f, "Delay2See03",false);
}
void Delay2See03(string asTimer)
{
	ShowEnemyPlayer("p2spider3");
	
	DestroyTimer("delaysee3");
}
/*Enter spider area*/
void EnterSpiderArea02(string asParent, string asChild)
{
	PlaySoundEntity("openegg2",false);
	
	CreateTimer("spiderdelay2", 3.8f, "SpiderDelay02",false);
	
	//CreateTimer("SpecialSpider1", 15, "SpecialSpider01",false); //Trigger 3rd if player idles
	
	SetGameEntityActive("spiders2",false);
}
/*Pop the eggs!*/
void SpiderDelay02(string asTimer)
{
	if (GetLocalVar("spider") <= 2)
	{
		SetEntityHealth("p2egg"+GetLocalVar("spider"), 0);
	
		AddLocalVar("spider", 1);
	
		DestroyTimer("spiderdelay2");
	
		CreateTimer("spiderdelay2", 0.2f+(GetLocalVar("spider")*0.06), "SpiderDelay02",false);
	}
	else if (GetLocalVar("spider") == 3)
	{
		SetEntityHealth("p2egg"+GetLocalVar("spider"), 0);
		
		SetLocalVar("spider", 1);
		
		DestroyTimer("spiderdelay2");
	}
}

/*Third encounter
 */
void P03Egg01(string asEntity)
{
	SetGameEntityActive("p3spider1",true);
	
	CreateTimer("delaysee1", 0.3f, "Delay3See01",false);
}
void Delay3See01(string asTimer)
{
	ShowEnemyPlayer("p3spider1");
	
	DestroyTimer("delaysee1");
}
void P03Egg02(string asEntity)
{
	SetGameEntityActive("p3spider2",true);
	
	CreateTimer("delaysee2", 0.2f, "Delay3See02",false);
}
void Delay3See02(string asTimer)
{
	ShowEnemyPlayer("p3spider2");
	
	DestroyTimer("delaysee2");
}
void P03Egg03(string asEntity)
{
	SetGameEntityActive("p3spider3",true);
	
	CreateTimer("delaysee3", 0.1f, "Delay3See03",false);
}
void Delay3See03(string asTimer)
{
	ShowEnemyPlayer("p3spider3");
	
	DestroyTimer("delaysee3");
}
/*Enter spider area*/
/*void EnterSpiderArea03(string asParent, string asChild)
{
	PlaySoundEntity("openegg3",false);
	
	CreateTimer("spiderdelay3", 2.1f, "SpiderDelay03",false);
	
	SetGameEntityActive("spiders3",false);
}*/
/*Pop the eggs!*/
void SpiderDelay03(string asTimer)
{
	if (GetLocalVar("spider") <= 2)
	{
		SetEntityHealth("p3egg"+GetLocalVar("spider"), 0);
	
		AddLocalVar("spider", 1);
	
		DestroyTimer("spiderdelay3");
	
		CreateTimer("spiderdelay3", 0.1f+(GetLocalVar("spider")*0.05), "SpiderDelay03",false);
	}
	else if (GetLocalVar("spider") == 3)
	{
		SetEntityHealth("p3egg"+GetLocalVar("spider"), 0);
		
		SetLocalVar("spider", 1);
		
		DestroyTimer("spiderdelay3");
	}
}
/*special trigger if player idles in room with fire, disables area for other trigger
 */
/*void SpecialSpider01(string asTimer)
{
	PlaySoundEntity("openegg3",false);
	
	CreateTimer("spiderdelay3", 3.2f, "SpiderDelay03",false);
	
	SetGameEntityActive("spiders3",false);
}*/

/*Forth encounter
 */
void P04Egg01(string asEntity)
{
	SetGameEntityActive("p4spider1",true);
	
	ShowEnemyPlayer("p4spider1");
}
void P04Egg02(string asEntity)
{
	SetGameEntityActive("p4spider2",true);
	
	ShowEnemyPlayer("p4spider2");
}
void P04Egg03(string asEntity)
{
	SetGameEntityActive("p4spider3",true);
	
	ShowEnemyPlayer("p4spider3");
}
void P04Egg04(string asEntity)
{
	SetGameEntityActive("p4spider4",true);
	
	ShowEnemyPlayer("p4spider4");
}
/*Enter spider area*/
void EnterSpiderArea04(string asParent, string asChild)
{
	CreateTimer("spiderdelay4", 7, "SpiderDelay04",false);
	CreateTimer("spidersounddelay4", 3.5f, "SpiderSoundDelay04",false);
	
	PlaySoundEntity("openegg4",false);
	
	SetGameEntityActive("spiders4",false);
}
void SpiderSoundDelay04(string asTimer)
{
	PlaySoundEntity("openegg5",false);
	
	DestroyTimer("spidersounddelay4");
}
/*Pop the eggs!*/
void SpiderDelay04(string asTimer)
{
	if (GetLocalVar("spider") <= 3)
	{
		SetEntityHealth("p4egg"+GetLocalVar("spider"), 0);
	
		AddLocalVar("spider", 1);
	
		DestroyTimer("spiderdelay4");
	
		CreateTimer("spiderdelay4", 0.3f+(GetLocalVar("spider")*0.07), "SpiderDelay04",false);
	}
	else if (GetLocalVar("spider") == 4)
	{
		SetEntityHealth("p4egg"+GetLocalVar("spider"), 0);
		
		SetLocalVar("spider", 1);
		
		DestroyTimer("spiderdelay4");
	}
}
//STOP SPIDER EGGS//
////////////////////


///////////////////////
//START BOULDER LOCKS//
void BoulderLock01(string asParent, string asChild)
{
	CreateSoundEntityAt("Entity","lockrock1","locksound1","interact_attach_rock.snt");
	
	CreateParticleSystem("lockrockparticle1", "particle_stick_rock_dust", "lockrock1",1,1,1);
	
	SetBodyProperty("boulderlock1", "Mass", 0);

	SetGameEntityActive("killspiders1",true);
}
void BoulderLock02(string asParent, string asChild)
{
	CreateSoundEntityAt("Entity","lockrock2","locksound2","interact_attach_rock.snt");

	CreateParticleSystem("lockrockparticle2", "particle_stick_rock_dust", "lockrock2",1,1,1);
		
	SetBodyProperty("boulderlock2", "Mass", 0);
	
	SetGameEntityActive("killspiders2",true);
}
//STOP BOULDER LOCKS//
//////////////////////


//////////////////////
//START PARAFIN BURN//
void ZippoParafin01(string asItem, string asEntity)
{
	FadeLight3D("light1", 0.8,0.79,0.68,0.5, 3.5,1);
		
	PlayGuiSound("lighter_burst", 1);
	
	PlaySoundEntity("burning1",true);
		
	for(int i=1;i<=4;i++)
		CreateParticleSystem("fire"+i, "particle_fire_startup01", "parafinburn"+i,1,1,1);
		
	SetGameEntityActive("parafinburn",true);
	
	SetLocalVar("parafinburning", 1);
}
void EnterParaffinHelp(string asParent, string asChild)
{
	AddSubTitleTrans("01_12_water_cave_tunnels", "EventParaffinHelp", 2.8f);
	
	SetDepthOfFieldActive(true,1);
	SetupDepthOfField(0,0.1,0.2);
	
	CreateTimer("parafindelay1", 2.5f, "ParafinDelay1",false);
	
	SetGameEntityActive("parafinhelp",false);
}
void ParafinDelay1(string asTimer)
{
	SetDepthOfFieldActive(false,2);
}
//STOP PARAFIN BURN//
/////////////////////


//////////////////
//START ACID PIT//
void AcidPlayer01(string asParent, string asChild)
{
	GivePlayerDamage(4,"BloodSplash");	
}
void AcidPlayer02(string asParent, string asChild)
{
	PlayGuiSound("wm_acid_burn", 1);	
}
//STOP ACID PIT//
/////////////////


/////////////////////////
//START ROLLING BOULDER//
void EnterBoulderArea01(string asParent, string asChild)
{
	FadeInSoundEntity("rumble1", 0.2f);
	
	StartScreenShake(0.03f, 2,2,3);
	
	CreateTimer("boulderdelay1", 1.5f, "BoulderDelay01",false);
	
	SetGameEntityActive("boudler1",false);
	
	RemoveEntityCollideCallback("Enter","Player","boudler1");
}
void BoulderDelay01(string asTimer)
{
	FadeOutSoundEntity("rumble1", 0.05f);
	
	SetEntityHealth("wall1", 0);
	
	CreateTimer("boulderdelay2", 2, "BoulderDelay02",false);
	
	DestroyTimer("boulderdelay1");
}
void BoulderDelay02(string asTimer)
{	
	AddBodyImpulse("boulder01","world",-4.5f,0,0);
	
	DestroyTimer("boulderdelay2");
}
void BoulderForce01(string asParent, string asChild)
{
	AddBodyForce("boulder01","world",-5,0,0);
}
void BoulderForce02(string asParent, string asChild)
{
	AddBodyForce("boulder01","world",-15,0,0);
}
void BoulderCollide01(string asParent, string asChild)
{
	GivePlayerDamage(1000,"BloodSplash");
	
	PlayGuiSound("break_organic", 0.5f);
}
void BoulderCollide02(string asParent, string asChild)
{
	CreateSoundEntityAt("Entity","boudler2","bdeath1","lm_event_break_wall_lower.snt");
	
	CreateParticleSystem("explo34a", "particle_expl_tnt", "boudler2",1,1,1);
	
	CreateTimer("bouldergone1", 0.2f, "BoulderGone01",false);
}
void BoulderGone01(string asTimer)
{
	SetGameEntityActive("boulder01",false);
	
	DestroyTimer("bouldergone1");
}
//turn of boulder damage if boulder in pit
void DisableStone(string asParent, string asChild)
{
	RemoveEntityCollideCallback("Enter","Player","boulder01");
	
	RemoveEntityCollideCallback("Enter","boulder01","disablestone");
	
	CreateTimer("disabledelay", 1.5f, "DisableDelay",false);
}
void DisableDelay(string asTimer)
{
	SetGameEntityActive("collider1",true);
	
	DestroyTimer("disabledelay");
}
void BreakPlanks01(string asEntity)
{
	SetGameEntityDescriptionOnceTrans("descpit","","");
}
//STOP ROLLING BOULDER//
////////////////////////


////////////////
//START PILLAR//
void BreakPillar01(string asEntity)
{
	//FadeInSoundEntity("rumble1", 0.2f);
	
	StartScreenShake(0.03f, 2,4,2.5f);
	
	AddSubTitleTrans("01_12_water_cave_tunnels", "EventEndLevel", 4.2f);
	
	PlayGameMusic("penumbra_music_E1_F2",1,0.5f,true,0);
	
	CreateTimer("rumbledelay1", 3.4f, "RumbleDelay01",false);	
}
void RumbleDelay01(string asTimer)
{	
	for(int i=1;i<=2;i++)	
		CreateParticleSystem("explo"+i, "particle_expl_tnt", "craschdust"+i,1,1,1);
	
	PlaySoundEntity("bigboom",false);
		
	SetGameEntityActive("killplayer",true);

	CreateTimer("rumbledelay2", 0.5f, "RumbleDelay02",false);
	
	DestroyTimer("rumbledelay1");
	
	ResetLogicTimer();
}
void RumbleDelay02(string asTimer)
{
	for(int i=1;i<=2;i++)	
		SetGameEntityActive("crash"+i,true);
	for(int i=1;i<=2;i++)	
		SetBodyProperty("crash"+i, "Mass", 0);
	
	/*For end level rumbles
	 */
	CreateTimer("endlevel1", 3, "EndLevel01",false); 
	CreateTimer("endlevel2", 28, "EndLevel02",false);
		
	DestroyTimer("rumbledelay2");
}
//STOP PILLAR//
///////////////

//////////////////////////
//START END LEVEL RUMBLE//
void EndLevel01(string asTimer)
{
	FadeInSoundEntity("rumble2", 0.1f);
	
	StartScreenShake(0.1f, 1,8,8);
	
	DestroyTimer("endlevel1");
}
void EndLevel02(string asTimer)
{
	if(GetLocalVar("endcollapse")==1)
	{
		PlaySoundEntity("bigboom",false);
		
		FadeOutSoundEntity("rumble1", 20);
	
		GivePlayerDamage(200,"BloodSplash");
	}
}

void EnterDisableCollapseKill(string asParent, string asChild)
{
		
}

//STOP END LEVEL RUMBLE//
/////////////////////////


//////////////////////////
//START END LEVEL CAVEIN//
void EnterDeadEnd(string asParent, string asChild)
{
	AddSubTitleTrans("01_12_water_cave_tunnels", "EventDeadEnd", 4.2f);
	
	SetGameEntityActive("deadend1",false);
}
//STOP END LEVEL CAVEIN//
/////////////////////////

/////////////////////////////
//START END AND BEGIN AREAS//
/*Start Link
 */
void ExitAreaInteract01(string asEntity)
{
	ChangeMap(	"level01_08_water_cave.dae", //New map
			"link02", //Positon on new map
			"","", //Stop and end sound.
			0.5f , 0.5f,//Fade out and in time (seconds).
			"",""); //Load text (cat and entry)
}
void ExitAreaEnter01(string asParent, string asChild)
{
	ChangeMap(	"level01_08_water_cave.dae", //New map
			"link02", //Positon on new map
			"","", //Stop and end sound.
			0.5f , 0.5f,//Fade out and in time (seconds).
			"",""); //Load text (cat and entry)
}
/*End Link
 */
void ExitAreaInteract02(string asEntity)
{
	SetLocalVar("endcollapse",0);
	SetGameEntityActive("disablespiders1",false);
	ChangeMap(	"level01_11_new_storage_room.dae", //New map
			"link02", //Positon on new map
			"","", //Stop and end sound.
			0.5f , 0.5f,//Fade out and in time (seconds).
			"",""); //Load text (cat and entry)
}
void ExitAreaEnter02(string asParent, string asChild)
{
	SetLocalVar("endcollapse",0);
	SetGameEntityActive("disablespiders1",false);
	ChangeMap(	"level01_11_new_storage_room.dae", //New map
			"link02", //Positon on new map
			"","", //Stop and end sound.
			0.5f , 0.5f,//Fade out and in time (seconds).
			"",""); //Load text (cat and entry)
}
//STOP END AND BEGIN AREAS//
////////////////////////////


////////////////////
//START SAVE AREAS//
void SaveArea01(string asParent, string asChild)
{
	SetGameEntityActive(asChild,false);
	
	radiomessage();
	
	if(GetLocalVar("parafinburning") == 1)
		AutoSave();
}
void SaveArea02(string asParent, string asChild)
{
	SetGameEntityActive(asChild,false);
	AutoSave();
}
//STOP SAVE AREAS//
///////////////////


//////////////////////////
//START SPECIAL EGG POPS//
void PopEggs01(string asParent, string asChild)
{
	PlaySoundEntity("openegg1",false);
	
	CreateTimer("spiderdelay1", 3.2f, "SpiderDelay01",false);
	
	SetGameEntityActive("desceggs1",false);
}
void PopEggs02(string asParent, string asChild)
{
	PlaySoundEntity("openegg2",false);
	
	CreateTimer("spiderdelay2", 3.2f, "SpiderDelay02",false);
	
	SetGameEntityActive("desceggs2",false);
}
void PopEggs03(string asParent, string asChild)
{
	PlaySoundEntity("openegg3",false);
	
	CreateTimer("spiderdelay3", 3.2f, "SpiderDelay03",false);
	
	SetGameEntityActive("desceggs3",false);
}
void PopEggs04(string asParent, string asChild)
{
	PlaySoundEntity("openegg4",false);
	
	CreateTimer("spiderdelay4", 3.2f, "SpiderDelay04",false);
	
	SetGameEntityActive("desceggs4",false);
}
void PopEggs05(string asParent, string asChild)
{
	PlaySoundEntity("openegg5",false);
	
	CreateTimer("spiderdelay4", 3.2f, "SpiderDelay04",false);
	
	SetGameEntityActive("desceggs5",false);
}
//STOP SPECIAL EGG POPS//
/////////////////////////

//////////////////////////
//START BOULDER IS IN ACID

void SmallBoulderInAcid(string asParent, string asChild)
{
	SetObjectInteractMode("sboulder01","Static");
	RemoveEntityCollideCallback("Enter","sboulder01","acid");	
}


//END BOULDER IN ACID
//////////////////////////


///////////////////////
//START RADIO MESSAGE//
void radiomessage()
{
	AddRadioMessage("Radio","Red 5.01","voice_red_05_part1.ogg");
	AddRadioMessage("Radio","Red 5.02","voice_red_05_part2.ogg");
}
//STOP RADIO MESSAGE//
//////////////////////


//////////////////////////////////////////////////////////
/*This function is run the FIRST time the map is loaded */
void OnStart()
{
	//---- AREA INIT ------------
	for(int i=1;i<=4;i++)
		AddEntityCollideCallback("Enter","Player","spiders"+i,"EnterSpiderArea0"+i);
	AddEntityCollideCallback("Enter","Player","desceggs1","PopEggs01");
	AddEntityCollideCallback("Enter","Player","desceggs2","PopEggs02");
	AddEntityCollideCallback("Enter","Player","desceggs3","PopEggs03");
	AddEntityCollideCallback("Enter","Player","desceggs4","PopEggs04");
	AddEntityCollideCallback("Enter","Player","desceggs5","PopEggs05");
	AddEntityCollideCallback("Enter","Player","parafinhelp","EnterParaffinHelp");
	AddEntityCollideCallback("Enter","Player","boudler1","EnterBoulderArea01");
	AddEntityCollideCallback("Enter","Player","boulder01","BoulderCollide01");
	AddEntityCollideCallback("Enter","boulder01","disablestone","DisableStone");
	for(int i=1;i<=2;i++)
		AddEntityCollideCallback("Enter","boulderlock"+i,"lockrock"+i,"BoulderLock0"+i);
	AddEntityCollideCallback("During","boulder01","boulderforce","BoulderForce01");
	AddEntityCollideCallback("During","boulder01","boulderforce2","BoulderForce02");
	AddEntityCollideCallback("Enter","boulder01","boudler2","BoulderCollide02");	
	AddEntityCollideCallback("During","Player","acid","AcidPlayer01");
	AddEntityCollideCallback("Enter","Player","acid","AcidPlayer02");
	AddEntityCollideCallback("Enter","Player","link01","ExitAreaEnter01");
	AddEntityCollideCallback("Enter","Player","link02","ExitAreaEnter02");
	AddEntityCollideCallback("Enter","Player","save1","SaveArea01");
	AddEntityCollideCallback("Enter","Player","save2","SaveArea02");
	AddEntityCollideCallback("Enter","Player","closelevel","EnterCloseLevel");
	AddEntityCollideCallback("Enter","Player","deadend1","EnterDeadEnd");
	AddEntityCollideCallback("Enter","Player","disablecollapsekill","EnterDisableCollapseKill");
	
	AddEntityCollideCallback("Enter","sboulder01", "acid","SmallBoulderInAcid");
	
	
	SetAreaCustomIcon("link01", "DoorLink");
	SetAreaCustomIcon("link02", "DoorLink");
	
	SetupDamageArea("parafinburn",100,2,1,false,false);
	SetupDamageArea("killplayer",100,2,1,false,true);
	SetupDamageArea("killspiders1",100,2,1,false,true);
	SetupDamageArea("killspiders2",100,2,1,false,true);
	
	SetupDamageArea("disablespiders1",1000,2,100,true,true);
	SetupDamageArea("disablespiders2",1000,2,100,true,true);
	
	//---- AUDIO INIT ------------
	StopSoundEntity("generator",false); //To make sure 4 stereo are played at most
	StopSoundEntity("rumble1",false);
	StopSoundEntity("rumble2",false);
	StopSoundEntity("bigboom",false);
	StopSoundEntity("burning1",false);
	StopSoundEntity("bigboom2",false);
	for(int i=1;i<=5;i++)
		StopSoundEntity("openegg"+i,false);
		
		
	//---- ENTITY INIT ------------
	for(int i=1;i<=4;i++)
		AddEntityCallback("OnBreak","p1egg"+i,"P01Egg0"+i);
	for(int i=1;i<=4;i++)	
		SetGameEntityActive("p1spider"+i,false);
	for(int i=1;i<=3;i++)
		AddEntityCallback("OnBreak","p2egg"+i,"P02Egg0"+i);
	for(int i=1;i<=3;i++)	
		SetGameEntityActive("p2spider"+i,false);
	for(int i=1;i<=3;i++)
		AddEntityCallback("OnBreak","p3egg"+i,"P03Egg0"+i);
	for(int i=1;i<=3;i++)	
		SetGameEntityActive("p3spider"+i,false);
	for(int i=1;i<=4;i++)
		AddEntityCallback("OnBreak","p4egg"+i,"P04Egg0"+i);
	for(int i=1;i<=4;i++)	
		SetGameEntityActive("p4spider"+i,false);
		
	for(int i=1;i<=2;i++)	
		SetGameEntityActive("crash"+i,false);
		
	for(int i=1;i<=3;i++)
		SetGameEntityActive("closerock"+i,false);
		
	SetGameEntityActive("parafinburn",false);
	SetGameEntityActive("killplayer",false);
	SetGameEntityActive("killspiders1",false);
	SetGameEntityActive("killspiders2",false);
	SetGameEntityActive("collider1",false);
	
	AddEntityCallback("OnBreak","pillar01","BreakPillar01");
	AddEntityCallback("OnBreak","boaulderboard01","BreakPlanks01");
	
	
	//---- INTERACT INIT ------------
	AddEntityCallback("PlayerInteract","link01","ExitAreaInteract01");
	AddEntityCallback("PlayerInteract","link02","ExitAreaInteract02");
	
	AddUseCallback("zippofire", "parafinburn1", "ZippoParafin01");
	
	
	//---- LIGHT INIT ------------
	FadeLight3D("light1", 0,0,0,0.0, 3.5,0.1);
	
	
	//---- TEXT INIT ------------
	SetGameEntityDescriptionOnceTrans("descremains","01_12_water_cave_tunnels","DescRemains");
	SetGameEntityDescriptionOnceTrans("desceggs1","01_12_water_cave_tunnels","DescEggs01");
	SetGameEntityDescriptionOnceTrans("descacid","01_12_water_cave_tunnels","DescAcid");
	SetGameEntityDescriptionOnceTrans("parafinburn1","01_12_water_cave_tunnels","DescParafin");
	SetGameEntityDescriptionOnceTrans("pillar01","01_12_water_cave_tunnels","DescPillar");
	SetGameEntityDescriptionOnceTrans("link01","01_12_water_cave_tunnels","DescWaterCave");
	SetGameEntityDescriptionOnceTrans("link02","01_12_water_cave_tunnels","DescNewStorage");
	
	
	//---- VARIABLE INIT ------------
	CreateLocalVar("spider", 1); //Used to spawn a set ammount of spiders.
	CreateLocalVar("endcollapse", 1);
	CreateLocalVar("parafinburning", 0);
	
	SetMapGameNameTrans("SaveNames","level01_12_water_cave_tunnels");
	AutoSave();
}	


/////////////////////////////////////////////////////
/*This function is run everytime the map is loaded */
void OnLoad()
{
	//---- LEVEL SETUP ------------
	SetSkyboxActive(true);
	SetSkyboxColor(	0.152, 	//Red 
			0.134, 	//Green
			0.117, 	//Blue
			1); 	//Alpha, always set this to 1.
	SetSkybox("");	
	
	SetAmbientColor(0.089,0.081,0.073);
	SetFogActive(true);
	SetFogCulling(true);
	SetFogProperties(3, //The distance at which fog start
			11,  //The distance at which fog has reach max intensity
			0.152,0.134,0.117 //Color of fog (r,g,b)
			);
			
	PlayGameMusic("penumbra_music_E1_A5",0.7f,0.3f,true,0);
	
	
	//---- PLAYER SETUP ------------
	SetPlayerPose("crouch",true);
	
}


///////////////////////////////////////
/*This function is run 60 times a sec*/
void OnUpdate()
{	

}


/////////////////////////////////////////////////////
/*This function is run everytime the map is unloaded */
void OnExit()
{
	FadeOutSoundEntity("rumble1", 20);
	FadeOutSoundEntity("rumble2", 20);
	
	StopGameMusic(0.2f, 0);
}
