// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE SPOT LIGHTING FRAGMENT PROGRAM /////////////
///////////////////////////////////////////////////////

void main(half4 pos : POSITION, //in projection space
		  half4 lightColor		: COLOR0,
		  half2 uv				: TEXCOORD0,
		  half3 lightDir		: TEXCOORD1,
		  float3 spotlightUv		: TEXCOORD2,
		              
		  out half4 oColor : COLOR,
          
		  uniform sampler2D diffuseMap			: TEXUNIT0,
		  uniform samplerCUBE normalCubeMap		: TEXUNIT2,
		  uniform sampler1D  falloffMap			: TEXUNIT3,
		  uniform sampler2D  spotlightMap		: TEXUNIT4,
		  uniform sampler1D  spotNegRejectMap	: TEXUNIT5
		  )
{
	half3 diffuse =		tex2D(diffuseMap, uv).xyz;
	half3 lightNormal=	(2*texCUBE(normalCubeMap,lightDir)-1).xyz;
    half  attenuation =	tex1D(falloffMap,dot(lightDir,lightDir)).x;
	half3 spotColor =	tex2Dproj(spotlightMap, spotlightUv).xyz;
	half rejectNeg =	tex1D(spotNegRejectMap,spotlightUv.z + 0.5).x;

	oColor.xyz =		diffuse * dot(lightNormal, half3(0,0,1)) * attenuation * 
						lightColor.xyz * spotColor * rejectNeg;
}
