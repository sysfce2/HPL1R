// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE LIGHTING FRAGMENT PROGRAM /////////////////
///////////////////////////////////////////////////////


void main(half4 pos				: POSITION, //in projection space
		  half4 lightColor		: COLOR0,
		  half2 uv				: TEXCOORD0,
		  half3 lightDir		: TEXCOORD1,
		              
		  out half4 oColor		: COLOR,
          
		  uniform sampler2D diffuseMap		: TEXUNIT0,
		  uniform sampler2D normalMap		: TEXUNIT1,
		  uniform samplerCUBE normalCubeMap : TEXUNIT2,
		  uniform sampler1D  falloffMap		: TEXUNIT3
		  )
{
	half attenuation = tex1D(falloffMap,dot(lightDir,lightDir)).x;
	
	half4 bumpVec = (2*tex2D(normalMap, uv)-1);
	half4 lightVec = (2*texCUBE(normalCubeMap,lightDir)-1);
	
	oColor.xyz = tex2D(diffuseMap, uv).xyz * lightColor.xyz * attenuation * dot(lightVec.xyz,bumpVec.xyz);
	
	oColor.w =0;
}
